/*
 * Estrava
 *
 * Cool Estrava tings
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type UserPostRequest struct {

	Name string `json:"name"`

	Username string `json:"username"`

	Password string `json:"password"`
}

// AssertUserPostRequestRequired checks if the required fields are not zero-ed
func AssertUserPostRequestRequired(obj UserPostRequest) error {
	elements := map[string]interface{}{
		"name": obj.Name,
		"username": obj.Username,
		"password": obj.Password,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseUserPostRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of UserPostRequest (e.g. [][]UserPostRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseUserPostRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aUserPostRequest, ok := obj.(UserPostRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertUserPostRequestRequired(aUserPostRequest)
	})
}

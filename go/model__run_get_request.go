/*
 * Estrava
 *
 * Cool Estrava tings
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"time"
)

type RunGetRequest struct {

	Title string `json:"title,omitempty"`

	Username string `json:"username"`

	Distance float32 `json:"distance"`

	Time time.Time `json:"time"`

	Date string `json:"date"`
}

// AssertRunGetRequestRequired checks if the required fields are not zero-ed
func AssertRunGetRequestRequired(obj RunGetRequest) error {
	elements := map[string]interface{}{
		"username": obj.Username,
		"distance": obj.Distance,
		"time": obj.Time,
		"date": obj.Date,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseRunGetRequestRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of RunGetRequest (e.g. [][]RunGetRequest), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseRunGetRequestRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aRunGetRequest, ok := obj.(RunGetRequest)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertRunGetRequestRequired(aRunGetRequest)
	})
}
